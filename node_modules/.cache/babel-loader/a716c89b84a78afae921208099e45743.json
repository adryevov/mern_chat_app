{"ast":null,"code":"var _jsxFileName = \"/Users/artem/school/fullstack/assgnmnt2/Chat-Admin-Application-MERN/src/components/login.component.js\";\nimport React, { Component } from \"react\";\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport { bool } from \"prop-types\"; // export default function Login(props) {\n//   const [username, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [authenticated, setAuth] = useState(false)\n//   function validateForm() {\n//     return username.length > 0 && password.length > 0;\n//   }\n//   function handleSubmit(event) {\n//     event.preventDefault();\n//     if(username == 'admin@gmail.com' && password == 'chatpassword'){\n//         setAuth(true)\n//     }\n//   }\n//   return (\n//     <div className=\"Login\">\n//       <form onSubmit={handleSubmit}>\n//         <FormGroup controlId=\"email\" bsSize=\"large\">\n//           <FormLabel>Email</FormLabel>\n//           <FormControl\n//             autoFocus\n//             type=\"email\"\n//             value={username}\n//             onChange={e => setEmail(e.target.value)}\n//           />\n//         </FormGroup>\n//         <FormGroup controlId=\"password\" bsSize=\"large\">\n//           <FormLabel>Password</FormLabel>\n//           <FormControl\n//             value={password}\n//             onChange={e => setPassword(e.target.value)}\n//             type=\"password\"\n//           />\n//         </FormGroup>\n//         <Button block bsSize=\"large\" disabled={!validateForm()} type=\"submit\">\n//           Login\n//         </Button>\n//       </form>\n//     </div>\n//   );\n// }\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeAuth = this.onChangeAuth.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      authenticated: \"\"\n    };\n  }\n\n  validateForm() {\n    return this.username.length > 0 && this.password.length > 0;\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeAuth(e) {\n    this.setState({\n      authenticated: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    const admin = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    if (admin.username === \"admin@gmail.com\" && admin.password === \"pwd\") {\n      this.setState({\n        authenticated: true\n      });\n      this.props.authenticated(this.state.authenticated);\n      console.log(\"status auth: \" + this.state.authenticated);\n    } else {\n      console.log(\"something went wrong\");\n    }\n\n    e.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 23\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"email\",\n      value: this.state.username,\n      onChange: this.onChangeUsername,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(FormControl, {\n      value: this.state.password,\n      onChange: this.onChangePassword,\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      disabled: !this.validateForm,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, \"Login\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/artem/school/fullstack/assgnmnt2/Chat-Admin-Application-MERN/src/components/login.component.js"],"names":["React","Component","Button","FormGroup","FormControl","FormLabel","bool","Login","constructor","props","onChangeUsername","bind","onChangePassword","onChangeAuth","handleSubmit","state","username","password","authenticated","validateForm","length","e","setState","target","value","admin","console","log","preventDefault","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport { bool } from \"prop-types\";\n\n// export default function Login(props) {\n//   const [username, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [authenticated, setAuth] = useState(false)\n//   function validateForm() {\n//     return username.length > 0 && password.length > 0;\n//   }\n\n//   function handleSubmit(event) {\n//     event.preventDefault();\n//     if(username == 'admin@gmail.com' && password == 'chatpassword'){\n//         setAuth(true)\n        \n//     }\n\n//   }\n\n//   return (\n//     <div className=\"Login\">\n//       <form onSubmit={handleSubmit}>\n//         <FormGroup controlId=\"email\" bsSize=\"large\">\n//           <FormLabel>Email</FormLabel>\n//           <FormControl\n//             autoFocus\n//             type=\"email\"\n//             value={username}\n//             onChange={e => setEmail(e.target.value)}\n//           />\n//         </FormGroup>\n//         <FormGroup controlId=\"password\" bsSize=\"large\">\n//           <FormLabel>Password</FormLabel>\n//           <FormControl\n//             value={password}\n//             onChange={e => setPassword(e.target.value)}\n//             type=\"password\"\n//           />\n//         </FormGroup>\n//         <Button block bsSize=\"large\" disabled={!validateForm()} type=\"submit\">\n//           Login\n//         </Button>\n//       </form>\n//     </div>\n//   );\n// }\n\nexport default class Login extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.onChangeUsername = this.onChangeUsername.bind(this);\n      this.onChangePassword = this.onChangePassword.bind(this);\n      this.onChangeAuth = this.onChangeAuth.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.state = {\n        username: \"\",\n        password: \"\",\n        authenticated: \"\"\n      };\n    }\n\n    validateForm() {\n            return this.username.length > 0 && this.password.length > 0;\n          }\n    onChangeUsername(e) {\n      this.setState({\n        username: e.target.value\n      });\n    }\n    onChangePassword(e) {\n      this.setState({\n        password: e.target.value\n      });\n    }\n    onChangeAuth(e) {\n        this.setState({\n          authenticated: e.target.value\n        });\n      }\n    \n    handleSubmit(e) {\n        \n  \n      const admin = {\n        username: this.state.username,\n        password: this.state.password\n      };\n  \n      if(admin.username === \"admin@gmail.com\" && admin.password === \"pwd\"){\n          this.setState({\n              authenticated: true\n          })\n          \n          this.props.authenticated(this.state.authenticated)\n          console.log(\"status auth: \" + this.state.authenticated)\n      }else{\n          console.log(\"something went wrong\")\n      }\n      e.preventDefault();\n    }\n  \n    render() {\n        return (\n                <div className=\"Login\">\n                  <form onSubmit={this.handleSubmit}>\n                    <FormGroup controlId=\"email\" bsSize=\"large\">\n                      <FormLabel>Email</FormLabel>\n                      <FormControl\n                        autoFocus\n                        type=\"email\"\n                        value={this.state.username}\n                        onChange={this.onChangeUsername}\n                      />\n                    </FormGroup>\n                    <FormGroup controlId=\"password\" bsSize=\"large\">\n                      <FormLabel>Password</FormLabel>\n                      <FormControl\n                        value={this.state.password}\n                        onChange={this.onChangePassword}\n                        type=\"password\"\n                      />\n                    </FormGroup>\n                    <Button block bsSize=\"large\" disabled={!this.validateForm} type=\"submit\">\n                      Login\n                    </Button>\n                  </form>\n                </div>\n              );\n    }\n  }"]},"metadata":{},"sourceType":"module"}